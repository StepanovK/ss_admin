version: "3.8"

services:

#    ads_manager:
#        image: ss/ads
#        build:
#            context: .
#            dockerfile: Scripts/ADS_Manager/Dockerfile
#        networks:
#            - ss
#        volumes:
#            - ./ADS_Manager:/app/ADS_Manager
#            - ./utils:/app/utils
#        env_file:
#            - .env

    listener:
        image: ss/listener
        build:
            context: .
            dockerfile: BotVKListener/Dockerfile
        networks:
            - ss
        volumes:
            - ./BotVKListener:/app/BotVKListener
            - ./Models:/app/Models
            - ./utils:/app/utils
        depends_on:
            - "postgres"
        env_file:
            - .env

    postgres:
        image: postgres
        build:
            context: .
            dockerfile: Models/Dockerfile
        networks:
            - ss
        environment:
            POSTGRES_DB: "admin_ss"
            POSTGRES_USER: "postgres"
            POSTGRES_PASSWORD: "postgres"
            PGDATA: "/ss/data/pgdata"
        volumes:
            - postgres:/data/postgres
        ports:
            - "5432:5432"
        restart: unless-stopped

#    zookeeper:
#        image: pr/zookeeper
#        build:
#            context: .
#            dockerfile: devops/zookeeper.Dockerfile
#        networks:
#            - pr
#        ports:
#            - "2181:2181"
#
#    kafka:
#        image: pr/kafka
#        build:
#            context: .
#            dockerfile: devops/kafka.Dockerfile
#        environment:
#            #KAFKA_ADVERTISED_HOST_NAME: localhost
#            APP_ZOOKEEPER_CONNECTION: zookeeper:2181
#        #volumes:
#        #    - /var/run/docker.sock:/var/run/docker.sock
#        networks:
#            - pr
#        ports:
#            - "9092:9092"
#        depends_on:
#            - "zookeeper"

networks:
  ss:
    driver: bridge

volumes:
    postgres: